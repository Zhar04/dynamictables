{"version":3,"sources":["datatable/index.jsx","app/index.jsx","index.jsx"],"names":["Datatable","data","columns","Object","keys","cellPadding","cellSpacing","map","heading","row","column","App","useState","setData","q","setQ","searchColumns","setSearchColumns","useEffect","fetch","then","response","json","results","rows","type","value","onChange","e","target","checked","includes","prev","filter","sc","some","toString","toLowerCase","indexOf","require","polyfill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAEe,SAASA,EAAT,GAA8B,IAATC,EAAQ,EAARA,KAC5BC,EAAUD,EAAK,IAAME,OAAOC,KAAKH,EAAK,IAC5C,OACE,wBAAOI,YAAa,EAAGC,YAAa,EAApC,UACE,gCACE,6BACGL,EAAK,IAAMC,EAAQK,KAAI,SAACC,GAAD,OAAa,6BAAKA,WAG9C,gCACGP,EAAKM,KAAI,SAACE,GAAD,OACR,6BACGP,EAAQK,KAAI,SAACG,GAAD,OACX,6BAAKD,EAAIC,kB,MCPR,SAASC,IAAO,IAAD,EACJC,mBAAS,IADL,mBACrBX,EADqB,KACfY,EADe,OAEVD,mBAAS,IAFC,mBAErBE,EAFqB,KAElBC,EAFkB,OAGcH,mBAAS,CACjD,OACA,eAL0B,mBAGrBI,EAHqB,KAGNC,EAHM,KAQ5BC,qBAAU,WACRC,MAAM,gCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUT,EAAQS,EAAKC,cAC9B,IAcH,IAZgBC,EAYVtB,EAAUD,EAAK,IAAME,OAAOC,KAAKH,EAAK,IAC5C,OACE,gCACE,gCACE,uBACEwB,KAAK,OACLC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAKa,EAAEC,OAAOH,UAEhCxB,GACCA,EAAQK,KAAI,SAACG,GAAD,OACV,kCACE,uBACEe,KAAK,WACLK,QAASd,EAAce,SAASrB,GAChCiB,SAAU,SAACC,GACT,IAAME,EAAUd,EAAce,SAASrB,GACvCO,GAAiB,SAACe,GAAD,OACfF,EACIE,EAAKC,QAAO,SAACC,GAAD,OAAQA,IAAOxB,KADxB,sBAECsB,GAFD,CAEOtB,UAInBA,WAIT,8BACE,cAACV,EAAD,CAAWC,MAzCDuB,EAyCcvB,EAxCrBuB,EAAKS,QAAO,SAACxB,GAAD,OACjBO,EAAcmB,MACZ,SAACzB,GAAD,OACED,EAAIC,GACD0B,WACAC,cACAC,QAAQxB,EAAEuB,gBAAkB,gBAxBzCE,EAAQ,IAAeC,WACvBD,EAAQ,ICFRE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChC,EAAD,MAEFiC,SAASC,eAAe,W","file":"static/js/main.bc33a96b.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Datatable({ data }) {\n  const columns = data[0] && Object.keys(data[0]);\n  return (\n    <table cellPadding={0} cellSpacing={0}>\n      <thead>\n        <tr>\n          {data[0] && columns.map((heading) => <th>{heading}</th>)}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row) => (\n          <tr>\n            {columns.map((column) => (\n              <td>{row[column]}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import React, { useState, useEffect } from 'react';\n\nimport Datatable from '../datatable';\nimport './styles.css';\n\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\n\nexport default function App() {\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState('');\n  const [searchColumns, setSearchColumns] = useState([\n    'name',\n    'birth_year',\n  ]);\n\n  useEffect(() => {\n    fetch('https://swapi.dev/api/people')\n      .then((response) => response.json())\n      .then((json) => setData(json.results));\n  }, []);\n\n  function search(rows) {\n    return rows.filter((row) =>\n      searchColumns.some(\n        (column) =>\n          row[column]\n            .toString()\n            .toLowerCase()\n            .indexOf(q.toLowerCase()) > -1,\n      ),\n    );\n  }\n\n  const columns = data[0] && Object.keys(data[0]);\n  return (\n    <div>\n      <div>\n        <input\n          type='text'\n          value={q}\n          onChange={(e) => setQ(e.target.value)}\n        />\n        {columns &&\n          columns.map((column) => (\n            <label>\n              <input\n                type='checkbox'\n                checked={searchColumns.includes(column)}\n                onChange={(e) => {\n                  const checked = searchColumns.includes(column);\n                  setSearchColumns((prev) =>\n                    checked\n                      ? prev.filter((sc) => sc !== column)\n                      : [...prev, column],\n                  );\n                }}\n              />\n              {column}\n            </label>\n          ))}\n      </div>\n      <div>\n        <Datatable data={search(data)} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}